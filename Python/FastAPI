Mik√§ on FastAPI?

FastAPI on moderni, nopea (korkean suorituskyvyn) verkkokehys API:en rakentamiseen Python 3.7+:lla. Se on rakennettu Starlette-kirjaston p√§√§lle ja k√§ytt√§√§ Pydantic-kirjastoa datan validointiin.

Se on suunniteltu auttamaan sinua luomaan RESTful API:ita nopeasti, v√§hemm√§ll√§ koodilla ja paremmalla suorituskyvyll√§ ‚Äì samalla pit√§en koodisi siistin√§ ja luettavana.

Miksi FastAPI Flaskin/Djangon sijaan?

Vaikka Flask ja Django ovat tehokkaita, FastAPI tuo mukanaan joitain moderneja ominaisuuksia ja kehitt√§j√§yst√§v√§llisi√§ ty√∂kaluja, jotka erottavat sen muista:

Suorituskyky: FastAPI on yksi nopeimmista Python-verkkokehyksist√§ ‚Äì samalla tasolla Node.js:n ja Gon kanssa, asynkronisen tuen ansiosta.
Tyyppivihjeet = V√§hemm√§n Bugeja: K√§ytt√§√§ Pythonin tyyppivihjeit√§ datan automaattiseen validointiin. V√§hemm√§n arvailua, enemm√§n tarkkuutta.
Sis√§√§nrakennettu Dokumentaatio: Luo automaattisesti interaktiivisen API-dokumentaation (Swagger & ReDoc) ‚Äì ei tarvetta ylim√§√§r√§iselle asennukselle.
Asynkroninen Oletuksena: Rakennettu modernia asynkronista ohjelmointia varten. Tekee samanaikaisten pyynt√∂jen k√§sittelyst√§ eritt√§in tehokasta.
V√§hemm√§n Rakennepohjaa, Enemm√§n Koodia: Kirjoita siistej√§ API:ita v√§hemm√§ll√§ koodirivill√§ ‚Äì ei tarvetta manuaaliselle validoinnille tai koristeille kaikkialla.
Kuinka asentaa FastAPI + Uvicorn

FastAPI:n k√§yt√∂n aloittamiseen tarvitset kaksi asiaa:

FastAPI: p√§√§kehys
Uvicorn: ASGI-palvelin sovelluksesi ajamiseen
Asenna ne pipill√§:

Bash

pip install fastapi uvicorn
Voit my√∂s lis√§t√§ [all] mukaan ylim√§√§r√§isi√§ ominaisuuksia, kuten dokumentaatiotuen:

Bash

pip install fastapi[all] uvicorn
Toimii Python 3.7+:lla
Varmista, ett√§ k√§yt√§t virtuaaliymp√§rist√∂√§ (suositeltavaa)
Perus FastAPI -sovellus (Hello World)

Luo tiedosto nimelt√§ main.py:

Python

from fastapi import FastAPI

app = FastAPI()

@app.get("/")
def read_root():
    return {"message": "Hello, FastAPI!"}
Sovelluksen ajaminen Uvicornilla:

Bash

uvicorn main:app --reload
Mit√§ t√§m√§ tekee:

main ‚Üí tiedostonimesi (main.py)
app ‚Üí FastAPI-instanssisi
--reload ‚Üí mahdollistaa automaattisen uudelleenlatauksen koodin muuttuessa (erinomainen kehitysty√∂h√∂n)
Avaa http://127.0.0.1:8000 selaimessasi
Vieraile osoitteessa http://127.0.0.1:8000/docs interaktiivista API-dokumentaatiota varten
GET- ja POST-pyynt√∂jen k√§sittely

FastAPI tekee erilaisten HTTP-metodien, kuten GET ja POST, k√§sittelyst√§ eritt√§in helppoa.

üìå Esimerkki GET-pyynn√∂st√§

main.py:

Python

from fastapi import FastAPI

app = FastAPI()

@app.get("/greet")
def greet(name: str):
    return {"message": f"Hei, {name}!"}
Vieraile osoitteessa:

http://127.0.0.1:8000/greet?name=Akash

üìå Esimerkki POST-pyynn√∂st√§

main.py:

Python

from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI()

class User(BaseModel):
    name: str
    age: int

@app.post("/create-user")
def create_user(user: User):
    return {"message": f"K√§ytt√§j√§ {user.name} lis√§tty!"}
Testaa sit√§ Swagger UI:ssa osoitteessa:

http://127.0.0.1:8000/docs

FastAPI automaattisesti:

J√§sent√§√§ JSON-pyynn√∂n rungon
Validoi datan Pydanticin avulla
Palauttaa hy√∂dyllisi√§ virheviestej√§
Pydanticin k√§ytt√∂ pyynt√∂jen validointiin

FastAPI k√§ytt√§√§ Pydantic-malleja saapuvan pyynt√∂datan validoimiseen ja rakenteen m√§√§rittelyyn. T√§m√§ tarkoittaa, ettei manuaalisia tarkistuksia en√§√§ tarvita ‚Äì kaikki on automaattista!

üìå M√§√§rittele datamalli:

main.py:

Python

from pydantic import BaseModel

class Item(BaseModel):
    name: str
    price: float
    in_stock: bool
üìå K√§yt√§ sit√§ POST-reitiss√§:

main.py:

Python

from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI()

class Item(BaseModel):
    name: str
    price: float
    in_stock: bool

@app.post("/add-item")
def add_item(item: Item):
    return {"message": f"{item.name} lis√§tty!"}
FastAPI tekee seuraavaa:

Validoi tyypit (str, float, bool jne.)
Palauttaa automaattisesti 422-virheit√§, jos data on virheellist√§
Generoi API-dokumentaation kentt√§tiedoilla
Esimerkki pyynn√∂n rungosta:

JSON

{
  "name": "Notebook",
  "price": 9.99,
  "in_stock": true
}
Sis√§√§nrakennettu API-dokumentaatio (Swagger UI)

Yksi FastAPI:n hienoimmista ominaisuuksista on sen automaattisesti luotu, interaktiivinen API-dokumentaatio ‚Äì ilman mink√§√§nlaista asennusta!

üìå Aja vain sovelluksesi ja vieraile osoitteissa:

Swagger UI ‚Üí http://127.0.0.1:8000/docs
ReDoc ‚Üí http://127.0.0.1:8000/redoc
üìå Mit√§ saat:

Testaa p√§√§tepisteit√§si suoraan selaimesta
N√§e vaaditut parametrit, pyynt√∂-/vastausmuodot
Hy√∂dyllinen frontend-kehitt√§jille, testaajille tai kenelle tahansa API:si k√§ytt√§j√§lle
FastAPI k√§ytt√§√§ taustalla OpenAPI-standardia luodakseen n√§m√§ dokumentaatiot koodisi, reittiesi ja Pydantic-mallejesi perusteella.